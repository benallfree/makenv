#!/usr/bin/env php
<?php

error_reporting(E_ALL);
ini_set('display_errors', 'On');

$fname = getcwd()."/.makenv.php";

if(file_exists($fname))
{
  require($fname);
} else {
  /* SETUP */
  echo("Makenv is setting up your environment.\n");
  echo("...creating .makenv.php - go set it up now, then call this again\n");
  copy(dirname(__FILE__)."/../templates/.makenv.php", $fname);
  die;
}

function array_merge_recursive_distinct ( array &$array1, array &$array2 )
{
  $merged = $array1;

  foreach ( $array2 as $key => &$value )
  {
    if ( is_array ( $value ) && isset ( $merged [$key] ) && is_array ( $merged [$key] ) )
    {
      $merged [$key] = array_merge_recursive_distinct ( $merged [$key], $value );
    }
    else
    {
      $merged [$key] = $value;
    }
  }

  return $merged;
}
if(isset($argv[1]) && isset($configs[$argv[1]]))
{
  $environment = $argv[1];
  $config = array_merge_recursive_distinct($configs['default'], $configs[$environment]);
  $json = json_encode($config);
  $env = array();
  $fname = getcwd()."/.env.php";
  if(file_exists($fname))
  {
    $env = (include($fname));
  }
  $env['APP_CONFIG'] = $json;

  $s = file_get_contents(__DIR__.'/../templates/.env.php');
  $s = preg_replace("/##php##/", var_export($env, true), $s);
  file_put_contents($fname, $s);
  echo("{$fname} written.\n");
  die;
}
echo("No environment specified, outputting all.\n");
foreach($configs as $environment=>$config)
{
  if($environment == 'default') continue;
  $config = array_merge_recursive_distinct($configs['default'], $config);
  echo("\n{$environment}: SetEnv APP_CONFIG " . json_encode($config));
  echo("\n");
}
